AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  websockets-test-application

  SAM Template for simple-websockets-chat-app that has the DynamoDB table and Lambda
  functions needed to demonstrate the Websocket protocol on API Gateway.

Parameters:
  TableName:
    Type: String
    Default: 'simplechat_connections'
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

Resources:
  SimpleChatWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: SimpleChatWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $default
      AuthorizationType: NONE
      OperationName: DefaultRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DefaultInteg
  DefaultInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Default Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DefaultMessageFunction.Arn}/invocations
  EchoRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: echo
      #RouteResponseSelectionExpression: "$default"
      AuthorizationType: NONE
      OperationName: EchoRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref EchoInteg
  EchoRouteResponse:
    Type: 'AWS::ApiGatewayV2::RouteResponse'
    Properties:
      RouteId: !Ref EchoRoute
      ApiId: !Ref SimpleChatWebSocket
      RouteResponseKey: $default
  EchoInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Echo Integration
      IntegrationType: AWS
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EchoFunction.Arn}/invocations
  EchoIntegResponse:
    Type: AWS::ApiGatewayV2::IntegrationResponse
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      IntegrationResponseKey: "$default"
      IntegrationId: !Ref EchoInteg

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - DefaultRoute
    - DisconnectRoute
    - EchoRoute
    Properties:
      ApiId: !Ref SimpleChatWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref SimpleChatWebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "connectionId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "connectionId"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/onconnect.zip
      Handler: onconnect
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/ondisconnect.zip
      Handler: ondisconnect
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  DefaultMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: default/default.zip
      Handler: default
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*'
  DefaultMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DefaultMessageFunction
      Principal: apigateway.amazonaws.com
  EchoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: echo/echo.zip
      Handler: echo
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*'
  EchoPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref EchoFunction
      Principal: apigateway.amazonaws.com
  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-todo/create-todo.zip
      Handler: create-todo
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  CreateTodoPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CreateTodoFunction
      Principal: apigateway.amazonaws.com
  ListTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: list-todos/list-todos.zip
      Handler: list-todos
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  ListTodosPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ListTodosFunction
      Principal: apigateway.amazonaws.com
  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete-todo/delete-todo.zip
      Handler: delete-todo
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  DeleteTodoPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DeleteTodoFunction
      Principal: apigateway.amazonaws.com
  GetTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-todo/get-todo.zip
      Handler: get-todo
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  GetTodoPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetTodoFunction
      Principal: apigateway.amazonaws.com
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update-todo/update-todo.zip
      Handler: update-todo
      MemorySize: 256
      Runtime: go1.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  UpdateTodoPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UpdateTodoFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  DefaultMessageFunctionArn:
    Description: "DefaultMessage function ARN"
    Value: !GetAtt DefaultMessageFunction.Arn

  CreateTodoMessageFunctionArn:
    Description: "CreateTodo function ARN"
    Value: !GetAtt CreateTodoFunction.Arn

  GetTodoMessageFunctionArn:
    Description: "GetTodo function ARN"
    Value: !GetAtt GetTodoFunction.Arn

  DeleteTodoMessageFunctionArn:
    Description: "DeleteTodo function ARN"
    Value: !GetAtt DeleteTodoFunction.Arn

  UpdateTodoMessageFunctionArn:
    Description: "UpdateTodo function ARN"
    Value: !GetAtt UpdateTodoFunction.Arn

  ListTodosMessageFunctionArn:
    Description: "ListTodos function ARN"
    Value: !GetAtt ListTodosFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join [ '', [ 'wss://', !Ref SimpleChatWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]

